{"version":3,"sources":["components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","type","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","LoginForm","setUsername","password","setPassword","error","setError","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","e","required","align","App","getItem","textAlign","onClick","removeItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f26167e.chunk.js","sourcesContent":["import { useState } from \"react\"\r\nimport { sendMessage, isTyping } from 'react-chat-engine'\r\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons'\r\n\r\nconst MessageForm = (props) => {\r\n\r\n    const [value, setValue] = useState('')\r\n    const {chatId, creds} = props;\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const text = value.trim();\r\n        \r\n        if(text.length > 0) {\r\n            sendMessage(creds, chatId, { text });\r\n\r\n            setValue('');\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n\r\n        isTyping(props, chatId);\r\n    }\r\n\r\n    const handleUpload = (event) => {\r\n        sendMessage(creds, chatId, { files: event.target.files, text: '' })\r\n    }\r\n\r\n    return (\r\n        <form className=\"message-form\" onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\" \r\n                className=\"message-input\" \r\n                placeholder=\"Say Something\" \r\n                value={value} \r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            />\r\n            <label htmlFor=\"upload-button\">\r\n                <span className=\"image-button\">\r\n                    <PictureOutlined className=\"picture-icon\" />\r\n                </span>\r\n            </label>\r\n            <input type=\"file\" multiple={false} id=\"upload-button\" style={{display: 'none'}} onChange={handleUpload}/>\r\n            <button type=\"submit\" className=\"send-button\">\r\n                <SendOutlined className=\"send-icon\" />\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default MessageForm;","const MyMessage = ({ message }) => {\r\n\r\n    if(message?.attachments?.length > 0) {\r\n        return (\r\n            <img \r\n                src={message.attachments[0].file}\r\n                alt=\"message-attachment\"\r\n                className=\"message-image\"\r\n                style={{float: 'right'}}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"message\" style={{float: 'right', marginRight: '18px', color:'white', backgroundColor: '#3B2A50'}}>\r\n            {message.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyMessage;","const TheirMessage = ({lastMessage, message}) => {\r\n\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username != message.sender.username;\r\n\r\n    return (\r\n        <div className=\"message-row\">\r\n            {isFirstMessageByUser && (\r\n                <div \r\n                    className=\"message-avatar\"\r\n                    style={{backgroundImage: `url(${message?.sender?.avatar})`}}\r\n                />\r\n            )}\r\n            { message?.attachments?.length > 0 ?\r\n                <img \r\n                    src={message.attachments[0].file}\r\n                    alt=\"message-attachment\"\r\n                    className=\"message-image\"\r\n                    style={{marginLeft: isFirstMessageByUser ? '4px': '48px'}}\r\n                /> \r\n                : \r\n                <div className=\"message\" style={{float: 'left', backgroundColor: '#CABCBC', marginLeft: isFirstMessageByUser ? '4px': '48px'}}>\r\n                    {message.text}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TheirMessage;","import MessageForm from './MessageForm';\r\nimport MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\n\r\nconst ChatFeed = (props) => {\r\n\r\n    const { chats, activeChat, userName, messages } = props;\r\n\r\n    const chat = chats && chats[activeChat];\r\n\r\n    const renderReadReceipts = (message, isMyMessage) => {\r\n        return chat.people.map((person, index) => \r\n            person.last_read === message.id && (\r\n                <div \r\n                key={`read_${index}`}\r\n                className='read-receipt'\r\n                style={{\r\n                    float: isMyMessage ? 'right' : 'left',\r\n                    backgroundImage: `url(${person?.person?.avatar})`\r\n                }}\r\n                />\r\n            )\r\n        )\r\n    }\r\n\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages);\r\n\r\n        return keys.map((key, index) => {\r\n            const message = messages[key];\r\n            const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n            const isMyMessage = userName === message.sender.username;\r\n\r\n            return (\r\n                <div key={`msg_${index}`} style={{width: '100%'}}>\r\n                    <div className='message-block'>\r\n                        {\r\n                            isMyMessage ? <MyMessage message={message} /> : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />\r\n                        }\r\n                    </div>\r\n                    <div className='read-receipts' style={{marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px'}}>\r\n                        {renderReadReceipts(message, isMyMessage)}\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    if(!chat) return 'Loading...'\r\n\r\n    return (\r\n        <div className='chat-feed'>\r\n            <div className='chat-title-container'>\r\n                <div className='chat-title'>\r\n                    {chat.title}\r\n                </div>\r\n                <div className='chat-subtitle'>\r\n                    {chat.people.map((person) => ` ${person.person.username}`)}\r\n                </div>\r\n            </div>\r\n            {renderMessages()}\r\n            <div style={{height: '100px'}} />\r\n            <div className='message-form-container'>\r\n                <MessageForm {...props} chatId={activeChat} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatFeed;","import { useState } from 'react';\r\nimport axios from 'axios'\r\n\r\nconst LoginForm = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const authObject = { 'Project-ID': \"95ad89a4-7b36-4eb1-83d9-eba553fec2cf\", 'User-Name': username, 'User-Secret': password };\r\n\r\n        try {\r\n            await axios.get('https://api.chatengine.io/chats', { headers: authObject });\r\n\r\n            localStorage.setItem('username', username);\r\n            localStorage.setItem('password', password);\r\n\r\n            window.location.reload();\r\n        } catch (error) {\r\n            setError('User not Found!')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='wrapper'>\r\n            <div className='form'>\r\n                <h1 className='title'>Chat Hub</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" value={username} onChange={(e) => {setUsername(e.target.value)}} className='input' placeholder='Username' required />\r\n                    <input type=\"password\" value={password} onChange={(e) => {setPassword(e.target.value)}} className='input' placeholder='Password' required />\r\n                    <div align=\"center\">\r\n                        <button type=\"submit\" className='button'>\r\n                            <span>Start Chatting</span>\r\n                        </button>\r\n                    </div>\r\n                    <h2 className='error'>{error}</h2>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import { ChatEngine } from 'react-chat-engine'\nimport './App.css';\nimport ChatFeed from './components/ChatFeed'\nimport LoginForm from './components/LoginForm'\n\nfunction App() {\n\n  if(!localStorage.getItem('username')) {\n    return <LoginForm />\n  }\n\n  const handleLogout = () => {\n    localStorage.removeItem('username');\n    localStorage.removeItem('password');\n\n    window.location.reload();\n  }\n\n  return (\n    <div className=\"App\">\n      <div height=\"5vh\" style={{textAlign: 'right'}}>\n        <button onClick={handleLogout}>Logout</button>\n      </div>\n      <ChatEngine \n          height=\"95vh\"\n          projectID=\"95ad89a4-7b36-4eb1-83d9-eba553fec2cf\"\n          userName={localStorage.getItem('username')}\n          userSecret={localStorage.getItem('password')}\n          renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}